$scope module Diviseur8bit $end
$var wire 8 ! dividende $end
$var wire 8 " diviseur $end
$var wire 1 # start $end
$var wire 8 $ quotient $end
$var wire 8 % reste $end
$var wire 1 & ready $end
$var wire 1 ' division_zero $end
$var wire 16 ( reg_dividende $end
$var wire 8 ) reg_diviseur $end
$var wire 4 * compteur $end
$var wire 1 + en_cours $end
$var wire 2 , etat $end
$var wire 1 - sys_clk $end
$enddefinitions $end
$dumpvars
$end
#0
b00000000 !
b00000000 "
0#
b00000000 $
b00000000 %
0&
0'
b0000000000000000 (
b00000000 )
b0000 *
0+
b00 ,
0-
#5
b01100100 !
1-
b00000111 "
1#
#10
0-
#15
b00000111 )
1-
0#
1+
b01 ,
b0000000001100100 (
#20
0-
#25
1-
b0001 *
b0000000011001000 (
#30
0-
#35
1-
b0010 *
b0000000110010000 (
#40
0-
#45
1-
b0011 *
b0000001100100000 (
#50
0-
#55
1-
b0100 *
b0000011001000000 (
#60
0-
#65
1-
b0101 *
b0000110010000000 (
#70
0-
#75
1-
b0110 *
b0001100100000000 (
#80
0-
#85
1-
b0111 *
b0011001000000000 (
#90
0-
#95
1-
b1000 *
b0110010000000000 (
b10 ,
#100
0-
#105
1-
0+
b00 ,
1&
#110
0-
#115
b00000000 !
b00000000 "
0#
b00000000 $
b00000000 %
0&
0'
b0000000000000000 (
b00000000 )
b0000 *
0+
b00 ,
0-
